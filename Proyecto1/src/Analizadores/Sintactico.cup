package Analizadores;

import java_cup.runtime.*;
import Estructuras.*;
import java.util.ArrayList;

parser code
{:
    private ArrayList<Arbol> arboles = new ArrayList<Arbol>();
    private ArrayList<String> cadenas = new ArrayList<String>();
    private int contador=0;
    private int contadorH=1;

    public Arbol nuevoArbol(String nombre, NodoArbol raiz){
        return new Arbol(nombre, new NodoArbol(raiz, new NodoArbol(null, null, "#", contador, contadorH),".", contador+1, contadorH));
    }
    
    public ArrayList<Arbol> getArboles(){
        return arboles;
    }

    public ArrayList<String> devolver(){
        return cadenas;
    }

    public void syntax_error(Symbol s){
        System.err.println("Error Sintáctico en la Línea "+(s.left)+
        ", Columna "+s.right+". No se esperaba este componente: "+s.value+".");
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error sintáctico irrecurable en la Línea "+
        s.left+", Columna "+s.right+". Componente "+s.value+" no reconocido.");
    }
:}


terminal String cadena, letraexp, llaveI, llaveC, dospt, guion, flecha, ptcoma;
terminal String punto, orchar, porcentaje, mas, asterisco, interrog, conjj;
terminal String coma, id, dig, letra, caso1, caso2, caso3, caso4, especial;

non terminal CONJ, CUERPOCONJ, LISTA, CUERPO2, VALIDACION, INICIO, CUERPO1;
non terminal NodoArbol EXPRESION;
non terminal String REGULAR;

start with INICIO;

INICIO::=llaveI CUERPO1 porcentaje porcentaje porcentaje porcentaje CUERPO2 {:System.out.println("Jalo :D");:} llaveC;

CUERPO1::=CUERPO1 CONJ
            |CUERPO1 REGULAR
            |CONJ
            |REGULAR;

CUERPO2::=CUERPO2 VALIDACION
            |VALIDACION;

VALIDACION::= id:var1 dospt:var2 cadena:var3 ptcoma:var4 {:RESULT=parser.cadenas.add(var1+var2+var3+var4);:};

REGULAR::=id:var1 guion flecha EXPRESION:var2 ptcoma {:parser.arboles.add(parser.nuevoArbol(var1, var2));contador=0;contadorH=1;:};

EXPRESION::= punto EXPRESION:var1 EXPRESION:var2        {:RESULT=new NodoArbol(var1, var2, ".", parser.contador, parser.contadorH);contador++;:}
            |orchar EXPRESION:var1 EXPRESION:var2       {:RESULT=new NodoArbol(var1, var2, "|", parser.contador, parser.contadorH);contador++;:}
            |mas EXPRESION:var1                         {:RESULT=new NodoArbol(var1, null, "+", parser.contador, parser.contadorH);contador++;:}
            |asterisco EXPRESION:var1                   {:RESULT=new NodoArbol(var1, null, "*", parser.contador, parser.contadorH);contador++;:}
            |interrog EXPRESION:var1                    {:RESULT=new NodoArbol(var1, null, "?", parser.contador, parser.contadorH);contador++;:}
            |letraexp:var1                              {:RESULT=new NodoArbol(null, null, var1, parser.contador, parser.contadorH);contador++;contadorH++;:}
            |dig:var1                                   {:RESULT=new NodoArbol(null, null, var1, parser.contador, parser.contadorH);contador++;contadorH++;:}
            |llaveI id:var1 llaveC                      {:RESULT=new NodoArbol(null, null, var1, parser.contador, parser.contadorH);contador++;contadorH++;:}
            |especial:var1                              {:RESULT=new NodoArbol(null, null, var1, parser.contador, parser.contadorH);contador++;contadorH++;:};

CONJ::= conjj dospt id guion flecha CUERPOCONJ ptcoma;

CUERPOCONJ::=LISTA
            |caso1
            |caso2
            |caso3
            |caso4;

LISTA::=LISTA coma dig
        |LISTA coma letra
        |letra
        |dig;
                 